######TESTING REPORT######

Date: Mon Mar 28 17:17:27 CDT 2022 

---PYTEST---

============================= test session starts ==============================
platform linux -- Python 3.8.10, pytest-7.1.1, pluggy-1.0.0
rootdir: /mnt/c/Users/jevin/OneDrive/Documents/CODING/Dev, configfile: pyproject.toml
plugins: cov-3.0.0
collected 40 items

tests/test_character/test_character_abilities.py .......                 [ 17%]
tests/test_character/test_character_armor.py .........                   [ 40%]
tests/test_character/test_character_equipment.py .......                 [ 57%]
tests/test_character/test_character_modifiers.py ......                  [ 72%]
tests/test_character/test_character_roles.py ..........                  [ 97%]
tests/test_character/test_character_stats.py F                           [100%]

=================================== FAILURES ===================================
_______________________________ test_stats_init ________________________________

    def test_stats_init():
>       stat_1 = Stats(
            health=randint(1, 100),
            energy=randint(1, 100),
            attack=randint(0, 100),
            defense=randint(1, 100),
        )
E       TypeError: __init__() got an unexpected keyword argument 'health'

tests/test_character/test_character_stats.py:19: TypeError

---------- coverage: platform linux, python 3.8.10-final-0 -----------
Name                               Stmts   Miss  Cover   Missing
----------------------------------------------------------------
FUNCLG/__init__.py                     0      0   100%
FUNCLG/__main__.py                     0      0   100%
FUNCLG/character/__init__.py           0      0   100%
FUNCLG/character/abilities.py         31      0   100%
FUNCLG/character/armor.py             86      1    99%   131
FUNCLG/character/equipment.py         42      2    95%   79, 82
FUNCLG/character/modifiers.py         64      0   100%
FUNCLG/character/roles.py             61      0   100%
FUNCLG/character/stats.py             44     29    34%   27-34, 40, 43-44, 47-54, 62-67, 83-88, 91-95
FUNCLG/main.py                         0      0   100%
FUNCLG/utils/__init__.py               0      0   100%
FUNCLG/utils/modifier_builder.py       0      0   100%
FUNCLG/utils/types.py                 24      1    96%   57
----------------------------------------------------------------
TOTAL                                352     33    91%

FAIL Required test coverage of 100.0% not reached. Total coverage: 90.62%
========================= 1 failed, 39 passed in 1.47s =========================

---Flake 8----

./FUNCLG/character/abilities.py:35:14: T101 fixme found (TODO)
./FUNCLG/character/abilities.py:37:11: T101 fixme found (TODO)
./FUNCLG/character/abilities.py:43:7: T101 fixme found (TODO)
./FUNCLG/character/abilities.py:60:7: T101 fixme found (TODO)
./FUNCLG/character/abilities.py:65:7: T101 fixme found (TODO)
./FUNCLG/character/armor.py:118:7: T101 fixme found (TODO)
./FUNCLG/character/armor.py:140:7: T101 fixme found (TODO)
./FUNCLG/character/armor.py:143:7: T101 fixme found (TODO)
./FUNCLG/character/armor.py:32:25: T101 fixme found (TODO)
./FUNCLG/character/armor.py:78:7: T101 fixme found (TODO)
./FUNCLG/character/equipment.py:100:7: T101 fixme found (TODO)
./FUNCLG/character/equipment.py:55:7: T101 fixme found (TODO)
./FUNCLG/character/equipment.py:70:11: T101 fixme found (TODO)
./FUNCLG/character/equipment.py:87:7: T101 fixme found (TODO)
./FUNCLG/character/modifiers.py:120:3: T101 fixme found (TODO)
./FUNCLG/character/modifiers.py:9:1: F401 'loguru.logger' imported but unused
./FUNCLG/character/roles.py:42:11: T101 fixme found (TODO)
./FUNCLG/character/roles.py:48:7: T101 fixme found (TODO)
./FUNCLG/character/roles.py:71:13: F841 local variable 'old_ability' is assigned to but never used
./FUNCLG/character/roles.py:76:7: T101 fixme found (TODO)
./FUNCLG/character/roles.py:85:38: T101 fixme found (TODO)
./FUNCLG/character/stats.py:10:1: F401 'typing_extensions.Self' imported but unused
./FUNCLG/character/stats.py:12:1: F401 '..utils.types.STAT_TYPES' imported but unused
./FUNCLG/character/stats.py:21:7: T101 fixme found (TODO)
./FUNCLG/character/stats.py:57:11: T101 fixme found (TODO)
./FUNCLG/character/stats.py:70:3: T101 fixme found (TODO)
./FUNCLG/character/stats.py:77:3: T101 fixme found (TODO)
./FUNCLG/character/stats.py:7:1: F401 'typing.Union' imported but unused
./FUNCLG/character/stats.py:81:7: T101 fixme found (TODO)
./FUNCLG/character/stats.py:84:30: T101 fixme found (TODO)
./FUNCLG/utils/types.py:17:3: T101 fixme found (TODO)
./FUNCLG/utils/types.py:48:3: T101 fixme found (TODO)
32

---Code Quality Report---


-----ISORT-----


-----BLACK-----

All done! ‚ú® üç∞ ‚ú®
13 files left unchanged.

-----BANDIT-----


-----XENON-----

ERROR:xenon:block "FUNCLG/character/armor.py:79 dequip" has a rank of C

-----PYLINT-----

************* Module FUNCLG
FUNCLG/__init__.py:1:0: C0103: Module name "FUNCLG" doesn't conform to snake_case naming style (invalid-name)
************* Module FUNCLG.character.abilities
FUNCLG/character/abilities.py:35:12: W0511: TODO: Will become stats, and a specific sub class that will be more focused for armor (fixme)
FUNCLG/character/abilities.py:37:9: W0511: TODO: Validation will be done during creation (fixme)
FUNCLG/character/abilities.py:43:5: W0511: TODO: add indention factor (fixme)
FUNCLG/character/abilities.py:60:5: W0511: TODO: Look to see if this is the best way to copy an object and if there is a better way to send all of the attributes (it may be * or **) (fixme)
FUNCLG/character/abilities.py:65:5: W0511: TODO: Define what happens when using a power. Damage and effect on which stat (fixme)
************* Module FUNCLG.character.armor
FUNCLG/character/armor.py:32:9: W0511: self.stats = #TODO: Stat Object (fixme)
FUNCLG/character/armor.py:78:5: W0511: TODO: Consider return a status and the item, for faster check (fixme)
FUNCLG/character/armor.py:118:5: W0511: TODO: Add indention factor (fixme)
FUNCLG/character/armor.py:140:5: W0511: TODO: Need to create an import function that is static to the method (fixme)
FUNCLG/character/armor.py:143:5: W0511: TODO: Need to create a define stats for armor (fixme)
FUNCLG/character/armor.py:22:4: R0913: Too many arguments (7/5) (too-many-arguments)
FUNCLG/character/armor.py:31:40: R1716: Simplify chained comparison between the operands (chained-comparison)
FUNCLG/character/armor.py:79:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
************* Module FUNCLG.character.equipment
FUNCLG/character/equipment.py:55:5: W0511: TODO: add indention factor (fixme)
FUNCLG/character/equipment.py:70:9: W0511: TODO: May have to change function when STATS object is integrated (fixme)
FUNCLG/character/equipment.py:87:5: W0511: TODO: Look to see if this is the best way to copy an object and if there is a better way to send all of the attributes (it may be * or **) (fixme)
FUNCLG/character/equipment.py:100:5: W0511: TODO: Defined method (fixme)
FUNCLG/character/equipment.py:25:4: R0913: Too many arguments (8/5) (too-many-arguments)
************* Module FUNCLG.character.modifiers
FUNCLG/character/modifiers.py:120:1: W0511: TODO: Possibly create a subclass tempMod. This would be the result of an attack and would expire after a number of turns and be removed after the combat, instance is over (fixme)
FUNCLG/character/modifiers.py:9:0: W0611: Unused logger imported from loguru (unused-import)
************* Module FUNCLG.character.roles
FUNCLG/character/roles.py:42:9: W0511: TODO: self.stats (fixme)
FUNCLG/character/roles.py:48:5: W0511: TODO: add check/validation for duplicates (fixme)
FUNCLG/character/roles.py:76:5: W0511: TODO add indention factor (fixme)
FUNCLG/character/roles.py:85:36: W0511: TODO: Add indention here too (fixme)
FUNCLG/character/roles.py:64:31: R1716: Simplify chained comparison between the operands (chained-comparison)
FUNCLG/character/roles.py:70:31: R1716: Simplify chained comparison between the operands (chained-comparison)
************* Module FUNCLG.character.stats
FUNCLG/character/stats.py:21:5: W0511: TODO: Create a more abstract load based on STAT_TYPES (fixme)
FUNCLG/character/stats.py:57:9: W0511: TODO: Complete (fixme)
FUNCLG/character/stats.py:70:1: W0511: TODO: Create an armor stat (fixme)
FUNCLG/character/stats.py:77:1: W0511: TODO: Create a role stat class (fixme)
FUNCLG/character/stats.py:81:5: W0511: TODO: may change to take an a (fixme)
FUNCLG/character/stats.py:84:28: W0511: TODO: Does this attribute need to be here (fixme)
FUNCLG/character/stats.py:71:0: W0105: String statement has no effect (pointless-string-statement)
FUNCLG/character/stats.py:80:0: C0103: Class name "Character_Stats" doesn't conform to PascalCase naming style (invalid-name)
FUNCLG/character/stats.py:80:0: C0115: Missing class docstring (missing-class-docstring)
FUNCLG/character/stats.py:83:8: E1121: Too many positional arguments for method call (too-many-function-args)
FUNCLG/character/stats.py:91:8: W0201: Attribute 'health' defined outside __init__ (attribute-defined-outside-init)
FUNCLG/character/stats.py:92:8: W0201: Attribute 'energy' defined outside __init__ (attribute-defined-outside-init)
FUNCLG/character/stats.py:7:0: W0611: Unused Union imported from typing (unused-import)
FUNCLG/character/stats.py:10:0: W0611: Unused Self imported from typing_extensions (unused-import)
FUNCLG/character/stats.py:12:0: W0611: Unused STAT_TYPES imported from utils.types (unused-import)
************* Module FUNCLG.utils.types
FUNCLG/utils/types.py:17:1: W0511: TODO: Rework (fixme)
FUNCLG/utils/types.py:48:1: W0511: TODO: needs to be fixed (fixme)

------------------------------------------------------------------
Your code has been rated at 8.63/10 (previous run: 8.84/10, -0.21)


-----PYRIGHT-----

npx: installed 1 in 7.445s
Cannot find module 'worker_threads'
Traceback (most recent call last):
  File "/home/jevinle/.cache/pypoetry/virtualenvs/funclg-cOw5GY8x-py3.8/bin/pyright", line 8, in <module>
    sys.exit(entrypoint())
  File "/home/jevinle/.cache/pypoetry/virtualenvs/funclg-cOw5GY8x-py3.8/lib/python3.8/site-packages/pyright/cli.py", line 46, in entrypoint
    sys.exit(main(sys.argv[1:]))
  File "/home/jevinle/.cache/pypoetry/virtualenvs/funclg-cOw5GY8x-py3.8/lib/python3.8/site-packages/pyright/cli.py", line 20, in main
    return run(*args, **kwargs).returncode
  File "/home/jevinle/.cache/pypoetry/virtualenvs/funclg-cOw5GY8x-py3.8/lib/python3.8/site-packages/pyright/cli.py", line 42, in run
    return node.run('npx', *pre_args, f'pyright@{version}', *args, **kwargs)
  File "/home/jevinle/.cache/pypoetry/virtualenvs/funclg-cOw5GY8x-py3.8/lib/python3.8/site-packages/pyright/node.py", line 112, in run
    return subprocess.run(node_args, env=env, **kwargs)
  File "/usr/lib/python3.8/subprocess.py", line 495, in run
    stdout, stderr = process.communicate(input, timeout=timeout)
  File "/usr/lib/python3.8/subprocess.py", line 1020, in communicate
    self.wait()
  File "/usr/lib/python3.8/subprocess.py", line 1083, in wait
    return self._wait(timeout=timeout)
  File "/usr/lib/python3.8/subprocess.py", line 1806, in _wait
    (pid, sts) = self._try_wait(0)
  File "/usr/lib/python3.8/subprocess.py", line 1764, in _try_wait
    (pid, sts) = os.waitpid(self.pid, wait_flags)
KeyboardInterrupt
