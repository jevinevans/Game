######TESTING REPORT######

Date: Tue Mar 29 11:18:59 CDT 2022 

---PYTEST---

============================= test session starts ==============================
platform linux -- Python 3.8.10, pytest-7.1.1, pluggy-1.0.0
rootdir: /mnt/c/Users/jevin/OneDrive/Documents/CODING/Dev, configfile: pyproject.toml
plugins: cov-3.0.0
collected 41 items

tests/test_character/test_character_abilities.py .......                 [ 17%]
tests/test_character/test_character_armor.py .........                   [ 39%]
tests/test_character/test_character_equipment.py .......                 [ 56%]
tests/test_character/test_character_modifiers.py ........                [ 75%]
tests/test_character/test_character_roles.py ..........                  [100%]

---------- coverage: platform linux, python 3.8.10-final-0 -----------
Name                               Stmts   Miss  Cover   Missing
----------------------------------------------------------------
FUNCLG/__init__.py                     0      0   100%
FUNCLG/__main__.py                     0      0   100%
FUNCLG/character/__init__.py           0      0   100%
FUNCLG/character/abilities.py         31      0   100%
FUNCLG/character/armor.py             87      1    99%   131
FUNCLG/character/equipment.py         42      2    95%   79, 82
FUNCLG/character/modifiers.py         64      0   100%
FUNCLG/character/roles.py             61      0   100%
FUNCLG/character/stats.py             35     22    37%   27-34, 40, 43-44, 47-54, 59, 62-67
FUNCLG/main.py                         0      0   100%
FUNCLG/utils/__init__.py               0      0   100%
FUNCLG/utils/modifier_builder.py       0      0   100%
FUNCLG/utils/types.py                 24      1    96%   59
----------------------------------------------------------------
TOTAL                                344     26    92%

FAIL Required test coverage of 100.0% not reached. Total coverage: 92.44%

============================== 41 passed in 1.24s ==============================

---Flake 8----

./FUNCLG/character/abilities.py:35:14: T101 fixme found (TODO)
./FUNCLG/character/abilities.py:37:11: T101 fixme found (TODO)
./FUNCLG/character/abilities.py:43:7: T101 fixme found (TODO)
./FUNCLG/character/abilities.py:60:7: T101 fixme found (TODO)
./FUNCLG/character/abilities.py:65:7: T101 fixme found (TODO)
./FUNCLG/character/armor.py:115:15: T101 fixme found (TODO)
./FUNCLG/character/armor.py:118:7: T101 fixme found (TODO)
./FUNCLG/character/armor.py:140:7: T101 fixme found (TODO)
./FUNCLG/character/armor.py:143:7: T101 fixme found (TODO)
./FUNCLG/character/armor.py:32:25: T101 fixme found (TODO)
./FUNCLG/character/armor.py:78:19: T101 fixme found (TODO)
./FUNCLG/character/equipment.py:100:7: T101 fixme found (TODO)
./FUNCLG/character/equipment.py:55:7: T101 fixme found (TODO)
./FUNCLG/character/equipment.py:70:11: T101 fixme found (TODO)
./FUNCLG/character/equipment.py:87:7: T101 fixme found (TODO)
./FUNCLG/character/modifiers.py:120:3: T101 fixme found (TODO)
./FUNCLG/character/modifiers.py:9:1: F401 'loguru.logger' imported but unused
./FUNCLG/character/roles.py:42:11: T101 fixme found (TODO)
./FUNCLG/character/roles.py:48:7: T101 fixme found (TODO)
./FUNCLG/character/roles.py:71:13: F841 local variable 'old_ability' is assigned to but never used
./FUNCLG/character/roles.py:76:7: T101 fixme found (TODO)
./FUNCLG/character/roles.py:85:38: T101 fixme found (TODO)
./FUNCLG/character/stats.py:107:3: T101 fixme found (TODO)
./FUNCLG/character/stats.py:10:1: F401 'typing_extensions.Self' imported but unused
./FUNCLG/character/stats.py:12:1: F401 '..utils.types.STAT_TYPES' imported but unused
./FUNCLG/character/stats.py:21:7: T101 fixme found (TODO)
./FUNCLG/character/stats.py:70:3: T101 fixme found (TODO)
./FUNCLG/character/stats.py:74:3: T101 fixme found (TODO)
./FUNCLG/character/stats.py:7:1: F401 'typing.Union' imported but unused
./FUNCLG/character/stats.py:82:3: T101 fixme found (TODO)
./FUNCLG/character/stats.py:84:67: W291 trailing whitespace
./FUNCLG/character/stats.py:90:3: T101 fixme found (TODO)
./FUNCLG/character/stats.py:99:3: T101 fixme found (TODO)
./FUNCLG/utils/types.py:17:3: T101 fixme found (TODO)
./FUNCLG/utils/types.py:50:3: T101 fixme found (TODO)
35

---Code Quality Report---


-----ISORT-----


-----BLACK-----

All done! ‚ú® üç∞ ‚ú®
13 files left unchanged.

-----BANDIT-----


-----XENON-----


-----PYLINT-----

************* Module FUNCLG
FUNCLG/__init__.py:1:0: C0103: Module name "FUNCLG" doesn't conform to snake_case naming style (invalid-name)
************* Module FUNCLG.character.abilities
FUNCLG/character/abilities.py:35:12: W0511: TODO: Will become stats, and a specific sub class that will be more focused for armor (fixme)
FUNCLG/character/abilities.py:37:9: W0511: TODO: Validation will be done during creation (fixme)
FUNCLG/character/abilities.py:43:5: W0511: TODO: add indention factor (fixme)
FUNCLG/character/abilities.py:60:5: W0511: TODO: Look to see if this is the best way to copy an object and if there is a better way to send all of the attributes (it may be * or **) (fixme)
FUNCLG/character/abilities.py:65:5: W0511: TODO: Define what happens when using a power. Damage and effect on which stat (fixme)
************* Module FUNCLG.character.armor
FUNCLG/character/armor.py:32:9: W0511: self.stats = #TODO: Stat Object (fixme)
FUNCLG/character/armor.py:78:17: W0511: TODO: add stats update (will probably be a function that will recal the whole thing instead of just removing one) (fixme)
FUNCLG/character/armor.py:115:13: W0511: TODO: add stats update (will probably be a function that will recal the whole thing instead of just removing one) (fixme)
FUNCLG/character/armor.py:118:5: W0511: TODO: Add indention factor (fixme)
FUNCLG/character/armor.py:140:5: W0511: TODO: Need to create an import function that is static to the method (fixme)
FUNCLG/character/armor.py:143:5: W0511: TODO: Need to create a define stats for armor (fixme)
FUNCLG/character/armor.py:22:4: R0913: Too many arguments (7/5) (too-many-arguments)
FUNCLG/character/armor.py:31:40: R1716: Simplify chained comparison between the operands (chained-comparison)
************* Module FUNCLG.character.equipment
FUNCLG/character/equipment.py:55:5: W0511: TODO: add indention factor (fixme)
FUNCLG/character/equipment.py:70:9: W0511: TODO: May have to change function when STATS object is integrated (fixme)
FUNCLG/character/equipment.py:87:5: W0511: TODO: Look to see if this is the best way to copy an object and if there is a better way to send all of the attributes (it may be * or **) (fixme)
FUNCLG/character/equipment.py:100:5: W0511: TODO: Defined method (fixme)
FUNCLG/character/equipment.py:25:4: R0913: Too many arguments (8/5) (too-many-arguments)
************* Module FUNCLG.character.modifiers
FUNCLG/character/modifiers.py:120:1: W0511: TODO: Possibly create a subclass tempMod. This would be the result of an attack and would expire after a number of turns and be removed after the combat, instance is over (fixme)
FUNCLG/character/modifiers.py:9:0: W0611: Unused logger imported from loguru (unused-import)
************* Module FUNCLG.character.roles
FUNCLG/character/roles.py:42:9: W0511: TODO: self.stats (fixme)
FUNCLG/character/roles.py:48:5: W0511: TODO: add check/validation for duplicates (fixme)
FUNCLG/character/roles.py:76:5: W0511: TODO add indention factor (fixme)
FUNCLG/character/roles.py:85:36: W0511: TODO: Add indention here too (fixme)
FUNCLG/character/roles.py:64:31: R1716: Simplify chained comparison between the operands (chained-comparison)
FUNCLG/character/roles.py:70:31: R1716: Simplify chained comparison between the operands (chained-comparison)
************* Module FUNCLG.character.stats
FUNCLG/character/stats.py:84:66: C0303: Trailing whitespace (trailing-whitespace)
FUNCLG/character/stats.py:21:5: W0511: TODO: Create a more abstract load based on STAT_TYPES (fixme)
FUNCLG/character/stats.py:70:1: W0511: TODO: Consider if level/level up is a common function for all stats and can be added to base class (fixme)
FUNCLG/character/stats.py:74:1: W0511: TODO: Create an equipment class (fixme)
FUNCLG/character/stats.py:82:1: W0511: TODO: Create an abilities class (fixme)
FUNCLG/character/stats.py:90:1: W0511: TODO: Create an armor stat (fixme)
FUNCLG/character/stats.py:99:1: W0511: TODO: Create a role stat class (fixme)
FUNCLG/character/stats.py:107:1: W0511: TODO: Build Character stats (fixme)
FUNCLG/character/stats.py:59:8: W0107: Unnecessary pass statement (unnecessary-pass)
FUNCLG/character/stats.py:75:0: W0105: String statement has no effect (pointless-string-statement)
FUNCLG/character/stats.py:83:0: W0105: String statement has no effect (pointless-string-statement)
FUNCLG/character/stats.py:91:0: W0105: String statement has no effect (pointless-string-statement)
FUNCLG/character/stats.py:100:0: W0105: String statement has no effect (pointless-string-statement)
FUNCLG/character/stats.py:108:0: W0105: String statement has no effect (pointless-string-statement)
FUNCLG/character/stats.py:7:0: W0611: Unused Union imported from typing (unused-import)
FUNCLG/character/stats.py:10:0: W0611: Unused Self imported from typing_extensions (unused-import)
FUNCLG/character/stats.py:12:0: W0611: Unused STAT_TYPES imported from utils.types (unused-import)
************* Module FUNCLG.utils.types
FUNCLG/utils/types.py:17:1: W0511: TODO: Rework (fixme)
FUNCLG/utils/types.py:50:1: W0511: TODO: needs to be fixed (fixme)

------------------------------------------------------------------
Your code has been rated at 8.67/10 (previous run: 8.64/10, +0.03)


-----PYRIGHT-----

Traceback (most recent call last):
  File "/home/jevinle/.poetry/bin/poetry", line 17, in <module>
    from poetry.console import main
  File "/home/jevinle/.poetry/lib/poetry/console/__init__.py", line 1, in <module>
    from .application import Application
  File "/home/jevinle/.poetry/lib/poetry/console/application.py", line 7, in <module>
    from .commands.about import AboutCommand
  File "/home/jevinle/.poetry/lib/poetry/console/commands/__init__.py", line 4, in <module>
    from .check import CheckCommand
  File "/home/jevinle/.poetry/lib/poetry/console/commands/check.py", line 2, in <module>
    from poetry.factory import Factory
  File "/home/jevinle/.poetry/lib/poetry/factory.py", line 16, in <module>
    from .packages.locker import Locker
  File "/home/jevinle/.poetry/lib/poetry/packages/__init__.py", line 2, in <module>
    from .locker import Locker
  File "/home/jevinle/.poetry/lib/poetry/packages/locker.py", line 38, in <module>
    from poetry.utils.extras import get_extra_package_names
  File "/home/jevinle/.poetry/lib/poetry/utils/extras.py", line 7, in <module>
    from poetry.utils.helpers import canonicalize_name
  File "/home/jevinle/.poetry/lib/poetry/utils/helpers.py", line 11, in <module>
    import requests
  File "/home/jevinle/.poetry/lib/poetry/_vendor/py3.8/requests/__init__.py", line 44, in <module>
    import chardet
  File "/home/jevinle/.poetry/lib/poetry/_vendor/py3.8/chardet/__init__.py", line 19, in <module>
    from .universaldetector import UniversalDetector
  File "/home/jevinle/.poetry/lib/poetry/_vendor/py3.8/chardet/universaldetector.py", line 47, in <module>
    from .mbcsgroupprober import MBCSGroupProber
  File "/home/jevinle/.poetry/lib/poetry/_vendor/py3.8/chardet/mbcsgroupprober.py", line 35, in <module>
    from .euckrprober import EUCKRProber
  File "<frozen importlib._bootstrap>", line 991, in _find_and_load
  File "<frozen importlib._bootstrap>", line 975, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 671, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 844, in exec_module
  File "<frozen importlib._bootstrap_external>", line 939, in get_code
  File "<frozen importlib._bootstrap_external>", line 1038, in get_data
KeyboardInterrupt
