######TESTING REPORT######

Date: Sun Aug 27 23:13:37 PDT 2023 

---PYTEST---

============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-7.4.0, pluggy-1.2.0
rootdir: /home/jevinle/Dev/FUNCLG
plugins: cov-3.0.0
collected 120 items

tests/test_character/test_abilities.py ......                            [  5%]
tests/test_character/test_armor.py ...............                       [ 17%]
tests/test_character/test_character.py .......                           [ 23%]
tests/test_character/test_equipment.py ..............                    [ 35%]
tests/test_character/test_modifiers.py .........                         [ 42%]
tests/test_character/test_roles.py .............                         [ 53%]
tests/test_character/test_stats.py ............                          [ 63%]
tests/test_main/test_main.py .                                           [ 64%]
tests/test_managers/test_abilities_manager.py .......                    [ 70%]
tests/test_managers/test_character_manager.py .........                  [ 77%]
tests/test_managers/test_equipment_manager.py .........                  [ 85%]
tests/test_managers/test_modifier_manager.py ...                         [ 87%]
tests/test_managers/test_roles_manager.py ............                   [ 97%]
tests/test_utils/test_types.py ...                                       [100%]

---------- coverage: platform linux, python 3.10.12-final-0 ----------
Name                                   Stmts   Miss Branch BrPart  Cover   Missing
----------------------------------------------------------------------------------
funclg/__init__.py                         0      0      0      0   100%
funclg/__main__.py                        35     19      4      1    44%   38-40, 54-65, 69-76, 80
funclg/character/__init__.py               0      0      0      0   100%
funclg/character/abilities.py             66      0     20      0   100%
funclg/character/armor.py                122      0     34      0   100%
funclg/character/character.py             62      4     12      0    95%   143-145, 148-149
funclg/character/equipment.py             83      0     10      0   100%
funclg/character/modifiers.py             64      0     30      0   100%
funclg/character/roles.py                 73      0     26      0   100%
funclg/character/stats.py                 62      0     28      0   100%
funclg/game/__init__.py                   11     11      0      0     0%   5-46
funclg/game/combat.py                      0      0      0      0   100%
funclg/game/game.py                        8      8      0      0     0%   20-40
funclg/game/level.py                      36     36      6      0     0%   9-119
funclg/game/rewards.py                     0      0      0      0   100%
funclg/managers/__init__.py               15      2      4      0    79%   29-30
funclg/managers/abilities_manager.py      66      0     22      1    99%   26->25
funclg/managers/character_manager.py     117      0     52      3    98%   64->63, 67->70, 70->73
funclg/managers/equipment_manager.py      88      1     30      2    97%   27->26, 95
funclg/managers/modifier_manager.py       66      0     26      0   100%
funclg/managers/roles_manager.py         118      0     50      2    99%   28->27, 114->128
funclg/utils/__init__.py                   0      0      0      0   100%
funclg/utils/data_mgmt.py                 48     13     16      1    69%   41->55, 45-54, 65-68
funclg/utils/input_validation.py          40     28     16      0    21%   19-29, 36-37, 44, 73-86, 98, 107-112, 128-136
funclg/utils/menu_funcs.py                36     16     14      0    48%   30-53
funclg/utils/types.py                     17      0      6      1    96%   55->58
----------------------------------------------------------------------------------
TOTAL                                   1233    138    406     11    88%

FAIL Required test coverage of 95.0% not reached. Total coverage: 88.35%

======================= 120 passed, 2 warnings in 1.18s ========================

---Code Quality Report---


-----BANDIT-----


-----PYLINT-----

************* Module funclg.__main__
funclg/__main__.py:46:39: W0511: TODO: add play instance (fixme)
funclg/__main__.py:52:1: W0511: TODO: Consider initializing the database calls to load and add the textual/rich progress loaders (fixme)
************* Module funclg.character.character
funclg/character/character.py:32:1: W0511: TODO: Make Char update in a new branch - 6.17.2023 (fixme)
funclg/character/character.py:33:1: W0511: TODO: Char Update - 1: Update character so that it is generalized (fixme)
funclg/character/character.py:34:1: W0511: TODO: Char Update - 2: Create a class called playable character for the user (fixme)
funclg/character/character.py:35:1: W0511: TODO: Char Update - 3: Create the NPC class that can be used later for random generation (fixme)
funclg/character/character.py:46:5: W0511: TODO: Update initialization process so that the role decides the armor type for the character and then all armor and equips will validate for the role (fixme)
************* Module funclg.character.abilities
funclg/character/abilities.py:21:1: W0511: TODO: add energy cost attribute (fixme)
funclg/character/abilities.py:118:5: W0511: TODO def use() (fixme)
************* Module funclg.character.equipment
funclg/character/equipment.py:23:1: W0511: TODO: Change equipment display methods (fixme)
funclg/character/equipment.py:151:5: W0511: TODO: Change equipment display methods (fixme)
funclg/character/equipment.py:176:5: W0511: TODO: Override details to include the weapon type (fixme)
funclg/character/equipment.py:215:5: W0511: TODO: Change equipment display methods (fixme)
************* Module funclg.character.modifiers
funclg/character/modifiers.py:66:9: W0511: TODO: Add check for percentage and add, and compare against the MOD_ADD_RANGE and MOD_MULT_RANGE (fixme)
************* Module funclg.character.armor
funclg/character/armor.py:34:9: W0511: TODO: 20240629 - Change to stats instead of stat (fixme)
funclg/character/armor.py:38:9: W0511: TODO: 20230617 - Change to setter/getters to protect equipment from being directly modified (fixme)
************* Module funclg.character.stats
funclg/character/stats.py:114:1: W0511: TODO: Create a role stat class (fixme)
funclg/character/stats.py:122:1: W0511: TODO: Build Character stats (fixme)
funclg/character/stats.py:115:0: W0105: String statement has no effect (pointless-string-statement)
funclg/character/stats.py:123:0: W0105: String statement has no effect (pointless-string-statement)
************* Module funclg.utils.data_mgmt
funclg/utils/data_mgmt.py:37:1: W0511: TODO may need to move assertion error to validate method (fixme)
funclg/utils/data_mgmt.py:50:9: W0511: TODO may want to re-validate name before creating (fixme)
************* Module funclg.utils.input_validation
funclg/utils/input_validation.py:14:1: W0511: TODO: 20230822 - This is still used in the menu interface and can possibly be removed (fixme)
************* Module funclg.utils.menu_funcs
funclg/utils/menu_funcs.py:12:1: W0511: TODO: 20220822 - Create an issue to track the update/integration of questionary into the menu (fixme)
************* Module funclg.utils.types
funclg/utils/types.py:7:1: W0511: TODO: Consider changing IT, AT and WT to enums (fixme)
funclg/utils/types.py:18:1: W0511: TODO Add descriptions (fixme)
************* Module funclg.game.level
funclg/game/level.py:22:1: W0511: TODO: Create a level manager (fixme)
funclg/game/level.py:49:12: W0511: TODO: Consider if this should be private and only callable (fixme)
funclg/game/level.py:62:5: W0511: TODO: Consider doing a precheck to make sure the running system can print the boundary characters, if not then use alternatives (fixme)
funclg/game/level.py:77:12: W0511: TODO: Decide whether to do a proper floor calculation or not (fixme)
funclg/game/level.py:85:9: W0511: TODO: I want to be able to make a decision if a block should be reward, enemy etc. (fixme)
funclg/game/level.py:122:1: W0511: TODO REMOVE ME (fixme)
funclg/game/level.py:9:0: W0105: String statement has no effect (pointless-string-statement)
funclg/game/level.py:25:0: C0115: Missing class docstring (missing-class-docstring)
************* Module funclg.game.game
funclg/game/game.py:20:0: C0115: Missing class docstring (missing-class-docstring)
funclg/game/game.py:23:4: E0211: Method '__init__' has no argument (no-method-argument)
************* Module funclg.managers.roles_manager
funclg/managers/roles_manager.py:25:5: W0511: TODO: On edit, needs to update all values (fixme)
funclg/managers/roles_manager.py:55:9: W0511: TODO: Add description print out (fixme)
funclg/managers/roles_manager.py:71:1: W0511: TODO add an option for adding no roles (fixme)
funclg/managers/roles_manager.py:127:5: W0511: TODO: Future: consider option to create a new one (fixme)
************* Module funclg.managers.abilities_manager
funclg/managers/abilities_manager.py:37:1: W0511: TODO: need to add a condition to not return so that there is not lose data (fixme)
funclg/managers/abilities_manager.py:38:1: W0511: TODO: Need to update so that if a new role is created and the user wants to create a new ability the selected ability types can be passed in only used (fixme)
funclg/managers/abilities_manager.py:42:5: W0511: TODO: Add description print out (fixme)
funclg/managers/abilities_manager.py:52:5: W0511: TODO: Need to be able to chose the mod for the ability they want (fixme)
funclg/managers/abilities_manager.py:78:1: W0511: TODO: 20230822 - Review copy usage. Item may be copied when added to role and does not need to be copied here then (fixme)
************* Module funclg.managers.modifier_manager
funclg/managers/modifier_manager.py:49:1: W0511: TODO: Create/modify the build to allow for random creation (fixme)
funclg/managers/modifier_manager.py:51:1: W0511: TODO Convert method to be able to handle multiple types of modifier generations. May require creating sub methods for the different types, weapon, armor, and abilities (fixme)
funclg/managers/modifier_manager.py:80:1: W0511: TODO: 20221112 - Change function to be allow the user to define each attribute of the MOD type, for each type decide if wanted or not, if so which type (percetage or base) (positive or nega), return values. (fixme)
************* Module funclg.managers.character_manager
funclg/managers/character_manager.py:92:5: W0511: TODO: 2023.06.17 - Add the option to skip (fixme)
funclg/managers/character_manager.py:114:5: W0511: TODO: 2023.06.17 - Confirm at the end, can ask to restart or move forward (fixme)

------------------------------------------------------------------
Your code has been rated at 9.56/10 (previous run: 9.54/10, +0.02)

