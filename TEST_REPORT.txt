######TESTING REPORT######

Date: Tue Apr  5 12:24:08 CDT 2022 

---PYTEST---

============================= test session starts ==============================
platform linux -- Python 3.8.10, pytest-7.1.1, pluggy-1.0.0
rootdir: /mnt/c/Users/jevin/OneDrive/Documents/CODING/Dev, configfile: pyproject.toml
plugins: cov-3.0.0
collected 39 items

tests/test_character/test_abilities.py .......                           [ 17%]
tests/test_character/test_armor.py .........                             [ 41%]
tests/test_character/test_equipment.py .....                             [ 53%]
tests/test_character/test_modifiers.py ........                          [ 74%]
tests/test_character/test_roles.py ..........                            [100%]

---------- coverage: platform linux, python 3.8.10-final-0 -----------
Name                               Stmts   Miss  Cover   Missing
----------------------------------------------------------------
FUNCLG/__init__.py                     0      0   100%
FUNCLG/__main__.py                     0      0   100%
FUNCLG/character/__init__.py           0      0   100%
FUNCLG/character/abilities.py         31      0   100%
FUNCLG/character/armor.py             87      1    99%   131
FUNCLG/character/equipment.py         64     16    75%   55-59, 62-64, 76, 79, 108, 179-183
FUNCLG/character/modifiers.py         63      0   100%
FUNCLG/character/roles.py             61      0   100%
FUNCLG/character/stats.py             34     22    35%   26-33, 39, 42-43, 46-53, 58, 61-66
FUNCLG/main.py                         0      0   100%
FUNCLG/utils/__init__.py               0      0   100%
FUNCLG/utils/modifier_builder.py       0      0   100%
FUNCLG/utils/types.py                 24      9    62%   53-65
----------------------------------------------------------------
TOTAL                                364     48    87%

FAIL Required test coverage of 100.0% not reached. Total coverage: 86.81%

============================== 39 passed in 1.32s ==============================

---Code Quality Report---


-----ISORT-----


-----BLACK-----

All done! ‚ú® üç∞ ‚ú®
13 files left unchanged.

-----BANDIT-----


-----XENON-----


-----PYLINT-----

************* Module FUNCLG
FUNCLG/__init__.py:1:0: C0103: Module name "FUNCLG" doesn't conform to snake_case naming style (invalid-name)
************* Module FUNCLG.character.abilities
FUNCLG/character/abilities.py:35:12: W0511: TODO: Will become stats, and a specific sub class that will be more focused for armor (fixme)
FUNCLG/character/abilities.py:62:5: W0511: TODO: Define what happens when using a power. Damage and effect on which stat (fixme)
************* Module FUNCLG.character.armor
FUNCLG/character/armor.py:32:9: W0511: self.stats = #TODO: Stat Object (fixme)
FUNCLG/character/armor.py:78:17: W0511: TODO: add stats update (will probably be a function that will recal the whole thing instead of just removing one) (fixme)
FUNCLG/character/armor.py:115:13: W0511: TODO: add stats update (will probably be a function that will recal the whole thing instead of just removing one) (fixme)
FUNCLG/character/armor.py:118:5: W0511: TODO: Add indention factor (fixme)
FUNCLG/character/armor.py:140:5: W0511: TODO: Need to create an import function that is static to the method (fixme)
FUNCLG/character/armor.py:143:5: W0511: TODO: Need to create a define stats for armor (fixme)
FUNCLG/character/armor.py:22:4: R0913: Too many arguments (7/5) (too-many-arguments)
************* Module FUNCLG.character.equipment
FUNCLG/character/equipment.py:21:1: W0511: TODO: May split into body equipment and weapons, that way (fixme)
FUNCLG/character/equipment.py:22:1: W0511: TODO: Remove damage and level because they will be a part of the equipment stat (fixme)
FUNCLG/character/equipment.py:52:5: W0511: TODO: add indention factor (fixme)
FUNCLG/character/equipment.py:53:5: W0511: TODO: add stats info for details (fixme)
FUNCLG/character/equipment.py:67:9: W0511: TODO: May have to change function when STATS object is integrated (fixme)
FUNCLG/character/equipment.py:81:5: W0511: TODO: Look to see if this is the best way to copy an object and if there is a better way to send all of the attributes (it may be * or **) (fixme)
FUNCLG/character/equipment.py:92:1: W0511: TODO: WeaponEquipment: Define functions [details, export, getstats] (fixme)
FUNCLG/character/equipment.py:102:9: W0511: TODO: self.stats  =  Create and add weapon stats that way they can be buffed or debuffed during battle (fixme)
FUNCLG/character/equipment.py:130:1: W0511: TODO: BodyEquipment: Define functions [details, export, get_mods] (fixme)
FUNCLG/character/equipment.py:136:4: R0913: Too many arguments (6/5) (too-many-arguments)
************* Module FUNCLG.character.modifiers
FUNCLG/character/modifiers.py:120:1: W0511: TODO: Possibly create a subclass tempMod. This would be the result of an attack and would expire after a number of turns and be removed after the combat, instance is over (fixme)
************* Module FUNCLG.character.roles
FUNCLG/character/roles.py:42:9: W0511: TODO: self.stats (fixme)
FUNCLG/character/roles.py:48:5: W0511: TODO: add check/validation for duplicates (fixme)
FUNCLG/character/roles.py:76:5: W0511: TODO add indention factor (fixme)
FUNCLG/character/roles.py:85:36: W0511: TODO: Add indention here too (fixme)
************* Module FUNCLG.character.stats
FUNCLG/character/stats.py:83:66: C0303: Trailing whitespace (trailing-whitespace)
FUNCLG/character/stats.py:20:5: W0511: TODO: Create a more abstract load based on STAT_TYPES (fixme)
FUNCLG/character/stats.py:69:1: W0511: TODO: Consider if level/level up is a common function for all stats and can be added to base class (fixme)
FUNCLG/character/stats.py:73:1: W0511: TODO: Create an equipment class (fixme)
FUNCLG/character/stats.py:81:1: W0511: TODO: Create an abilities class (fixme)
FUNCLG/character/stats.py:89:1: W0511: TODO: Create an armor stat (fixme)
FUNCLG/character/stats.py:98:1: W0511: TODO: Create a role stat class (fixme)
FUNCLG/character/stats.py:106:1: W0511: TODO: Build Character stats (fixme)
FUNCLG/character/stats.py:58:8: W0107: Unnecessary pass statement (unnecessary-pass)
FUNCLG/character/stats.py:74:0: W0105: String statement has no effect (pointless-string-statement)
FUNCLG/character/stats.py:82:0: W0105: String statement has no effect (pointless-string-statement)
FUNCLG/character/stats.py:90:0: W0105: String statement has no effect (pointless-string-statement)
FUNCLG/character/stats.py:99:0: W0105: String statement has no effect (pointless-string-statement)
FUNCLG/character/stats.py:107:0: W0105: String statement has no effect (pointless-string-statement)
FUNCLG/character/stats.py:7:0: W0611: Unused Union imported from typing (unused-import)
FUNCLG/character/stats.py:10:0: W0611: Unused Self imported from typing_extensions (unused-import)
************* Module FUNCLG.utils.types
FUNCLG/utils/types.py:8:1: W0511: TODO: Turn constants into tuples that way the the str or int value can be used (fixme)
FUNCLG/utils/types.py:51:1: W0511: TODO: needs to be fixed (fixme)
************* Module FUNCLG.utils.__init__
FUNCLG/utils/__init__.py:1:0: R0801: Similar lines in 2 files
==FUNCLG.character.equipment:[178:183]
==FUNCLG.character.stats:[61:66]
        exporter = self.__dict__
        for key, value in exporter.items():
            if isinstance(value, Modifier):
                exporter[key] = value.export()
        return exporter (duplicate-code)

------------------------------------------------------------------
Your code has been rated at 8.80/10 (previous run: 8.80/10, +0.00)


-----PYRIGHT-----

npm ERR! code EAI_AGAIN
npm ERR! errno EAI_AGAIN
npm ERR! request to https://registry.npmjs.org/pyright failed, reason: getaddrinfo EAI_AGAIN registry.npmjs.org registry.npmjs.org:443

npm ERR! A complete log of this run can be found in:
npm ERR!     /home/jevinle/.npm/_logs/2022-04-05T17_24_25_783Z-debug.log

Traceback (most recent call last):
  File "/home/jevinle/.cache/pypoetry/virtualenvs/funclg-cOw5GY8x-py3.8/bin/pyright", line 8, in <module>
    sys.exit(entrypoint())
  File "/home/jevinle/.cache/pypoetry/virtualenvs/funclg-cOw5GY8x-py3.8/lib/python3.8/site-packages/pyright/cli.py", line 46, in entrypoint
    sys.exit(main(sys.argv[1:]))
  File "/home/jevinle/.cache/pypoetry/virtualenvs/funclg-cOw5GY8x-py3.8/lib/python3.8/site-packages/pyright/cli.py", line 20, in main
    return run(*args, **kwargs).returncode
  File "/home/jevinle/.cache/pypoetry/virtualenvs/funclg-cOw5GY8x-py3.8/lib/python3.8/site-packages/pyright/cli.py", line 28, in run
    version = node.latest('pyright')
  File "/home/jevinle/.cache/pypoetry/virtualenvs/funclg-cOw5GY8x-py3.8/lib/python3.8/site-packages/pyright/node.py", line 145, in latest
    raise errors.VersionCheckFailed(
pyright.errors.VersionCheckFailed: Version check for pyright failed, see output above.
