######TESTING REPORT######

Date: Sat Nov 26 20:07:10 PST 2022 

---PYTEST---

============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-7.4.2, pluggy-1.3.0
rootdir: /home/jevinle/Dev/FUNCLG
plugins: cov-3.0.0
collected 114 items

<<<<<<< HEAD
tests/test_character/test_abilities.py ......                            [  5%]
<<<<<<< HEAD
tests/test_character/test_armor.py ...............                       [ 20%]
tests/test_character/test_character.py ........                          [ 28%]
tests/test_character/test_equipment.py ...............                   [ 43%]
tests/test_character/test_modifiers.py .........                         [ 52%]
tests/test_character/test_roles.py .............                         [ 65%]
tests/test_character/test_stats.py ............                          [ 77%]
tests/test_main/test_main.py .                                           [ 78%]
tests/test_managers/test_abilities_manager.py .......                    [ 85%]
tests/test_managers/test_equipment_manager.py ........                   [ 93%]
tests/test_managers/test_modifier_manager.py ...                         [ 96%]
tests/test_utils/test_types.py ....                                      [100%]
>>>>>>> b993bb6 (Completed abilities manager and related necessary changes)
=======
tests/test_character/test_armor.py ...............                       [ 19%]
tests/test_character/test_character.py ........                          [ 26%]
tests/test_character/test_equipment.py ..............                    [ 39%]
tests/test_character/test_modifiers.py .........                         [ 47%]
tests/test_character/test_roles.py .............                         [ 59%]
tests/test_character/test_stats.py ............                          [ 70%]
tests/test_main/test_main.py .                                           [ 70%]
tests/test_managers/test_abilities_manager.py .......                    [ 77%]
=======
tests/test_character/test_abilities.py ..F...                            [  5%]
tests/test_character/test_armor.py ............FF.                       [ 18%]
tests/test_character/test_character.py ...F....                          [ 25%]
tests/test_character/test_equipment.py ..............                    [ 37%]
tests/test_character/test_modifiers.py .........                         [ 45%]
tests/test_character/test_roles.py .............                         [ 57%]
tests/test_character/test_stats.py ............                          [ 67%]
tests/test_main/test_main.py .                                           [ 68%]
tests/test_managers/test_abilities_manager.py .......                    [ 74%]
tests/test_managers/test_character_manager.py ....                       [ 78%]
>>>>>>> e3f377b (Planning modifications to character class)
tests/test_managers/test_equipment_manager.py .........                  [ 85%]
tests/test_managers/test_modifier_manager.py ...                         [ 88%]
tests/test_managers/test_roles_manager.py ..........                     [ 97%]
tests/test_utils/test_types.py ...                                       [100%]
>>>>>>> b004044 (completed character manager)

<<<<<<< HEAD
---------- coverage: platform linux, python 3.10.12-final-0 ----------
Name                                   Stmts   Miss Branch BrPart  Cover   Missing
----------------------------------------------------------------------------------
funclg/__init__.py                         1      0      0      0   100%
funclg/__main__.py                        41     24      6      1    38%   39-43, 56-68, 72-79, 83-85
funclg/character/__init__.py               0      0      0      0   100%
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
funclg/character/abilities.py             65      0     18      0   100%
funclg/character/armor.py                143      0     46      5    97%   193->195, 195->197, 197->199, 199->201, 201->exit
funclg/character/character.py             86      4     14      0    94%   148-149, 164-167
funclg/character/equipment.py             97      0     10      0   100%
funclg/character/modifiers.py             71      0     38      1    99%   115->118
funclg/character/roles.py                 93      7     32      0    91%   67, 140, 156-160
funclg/character/stats.py                101      1     38      1    99%   55
funclg/game/__init__.py                   11      4      0      0    64%   22, 33, 37, 46
funclg/game/combat.py                      0      0      0      0   100%
funclg/game/game.py                       10      4      0      0    60%   40, 45, 49, 55
funclg/game/level.py                     101      0     42      2    99%   128->exit, 195->198
funclg/game/rewards.py                     0      0      0      0   100%
funclg/managers/__init__.py               18      4      6      0    67%   29-30, 34-35
funclg/managers/abilities_manager.py      69      1     24      1    98%   126
funclg/managers/character_manager.py     120      3     54      4    96%   27-28, 69->68, 72->75, 75->78, 228
funclg/managers/equipment_manager.py      89      4     32      3    94%   23-24, 31->30, 98, 181
funclg/managers/game_manager.py           27      9      8      1    60%   38-50, 54
funclg/managers/level_manager.py           0      0      0      0   100%
funclg/managers/roles_manager.py         123      3     52      3    97%   26-27, 33->32, 120->133, 227
funclg/managers/stats_manager.py          84     16     34      0    80%   127-155
funclg/utils/__init__.py                   0      0      0      0   100%
funclg/utils/data_mgmt.py                 51     15     16      1    67%   36-37, 43->56, 47-55, 66-69
funclg/utils/game_enums.py                32      4      2      0    88%   58-72
funclg/utils/input_validation.py          40     28     16      0    21%   18-28, 35-36, 43, 72-85, 97, 106-111, 127-135
funclg/utils/menu_funcs.py                36     16     14      0    48%   29-52
funclg/utils/types.py                     17      0      6      1    96%   53->56
----------------------------------------------------------------------------------
TOTAL                                   1526    147    508     24    89%

FAIL Required test coverage of 95.0% not reached. Total coverage: 88.74%

======================= 136 passed, 2 warnings in 1.73s ========================
=======
funclg/character/abilities.py             63      0     16      0   100%
=======
funclg/character/abilities.py             64      0     16      0   100%
>>>>>>> b993bb6 (Completed abilities manager and related necessary changes)
=======
funclg/character/abilities.py             66      0     18      0   100%
=======
=================================== FAILURES ===================================
____________________________ test_abilities_details ____________________________

abilities_all_types = [<funclg.character.abilities.Abilities object at 0x7fe2e2563a60>, <funclg.character.abilities.Abilities object at 0x7f...er.abilities.Abilities object at 0x7fe2e386dc30>, <funclg.character.abilities.Abilities object at 0x7fe2e386ebf0>, ...]
abilities_detail_expectation = ['\nAbility_0\n---------\nDescription: Magic ability\nAbility Type: Magic\nTarget: Enemy\n  Health: -50\n', '\n Abilit... '\n     Ability_5\n     ---------\n     Description: None ability\n     Ability Type: None\n     Target: None\n', ...]

    def test_abilities_details(abilities_all_types, abilities_detail_expectation):
        for index, ability in enumerate(abilities_all_types):
>           assert ability.details(index) == abilities_detail_expectation[index]
E           AssertionError: assert '\n Ability_1...Health: -50\n' == '\n Ability_1...Health: -50\n'
E             Skipping 85 identical leading characters in diff, use -v to show
E               : Enemy
E             -   Health: -50
E             +    Health: -50
E             ? +

tests/test_character/test_abilities.py:62: AssertionError
---------------------------- Captured stderr setup -----------------------------
2023-06-17 11:02:37.180 | DEBUG    | funclg.character.abilities:_validate_mods:62 - Mod Checks: health in ['health', 'defense'] True
2023-06-17 11:02:37.181 | DEBUG    | funclg.character.abilities:__init__:52 - Created Ability: Ability_0
2023-06-17 11:02:37.181 | DEBUG    | funclg.character.abilities:_validate_mods:62 - Mod Checks: health in ['health', 'defense'] True
2023-06-17 11:02:37.182 | DEBUG    | funclg.character.abilities:__init__:52 - Created Ability: Ability_1
2023-06-17 11:02:37.182 | DEBUG    | funclg.character.abilities:_validate_mods:62 - Mod Checks: health in ['health', 'defense', 'energy'] True
2023-06-17 11:02:37.182 | DEBUG    | funclg.character.abilities:__init__:52 - Created Ability: Ability_2
2023-06-17 11:02:37.183 | DEBUG    | funclg.character.abilities:_validate_mods:62 - Mod Checks: health in ['health', 'energy', 'attack', 'defense'] True
2023-06-17 11:02:37.183 | DEBUG    | funclg.character.abilities:__init__:52 - Created Ability: Ability_3
2023-06-17 11:02:37.183 | DEBUG    | funclg.character.abilities:_validate_mods:62 - Mod Checks: health in ['health', 'energy', 'attack', 'defense'] True
2023-06-17 11:02:37.184 | DEBUG    | funclg.character.abilities:__init__:52 - Created Ability: Ability_4
2023-06-17 11:02:37.184 | WARNING  | funclg.character.abilities:_validate_mods:71 - Using default modifier value.
2023-06-17 11:02:37.185 | DEBUG    | funclg.character.abilities:__init__:52 - Created Ability: Ability_5
2023-06-17 11:02:37.185 | WARNING  | funclg.character.abilities:_validate_mods:71 - Using default modifier value.
2023-06-17 11:02:37.185 | DEBUG    | funclg.character.abilities:__init__:52 - Created Ability: Ability_Error_NoMod
__________________________ test_armor_details_format ___________________________

light_armor_knife = <funclg.character.armor.Armor object at 0x7fe2e25351e0>
armor_details_expectations = ['\nLight Armor\n-----------\n  Head: \n  Head\n  ----\n  Type: [Light Head]\n  Description: Test Head\n\n  Modifier(s...\n\n\n       Stats\n       -----\n       Health: 210\n       Energy: 15.4\n       Attack: 11\n       Defense: 10', ...]

    def test_armor_details_format(light_armor_knife, armor_details_expectations):
        for indent, expectation in enumerate(armor_details_expectations):
>           assert light_armor_knife.details(indent) == expectation
E           AssertionError: assert '\nLight Armo...  Defense: 10' == '\nLight Armo...  Defense: 10'
E               
E               Light Armor
E               -----------
E                 Head: 
E             -   Head
E             +     Head
E             ? ++...
E             
E             ...Full output truncated (109 lines hidden), use '-vv' to show

tests/test_character/test_armor.py:194: AssertionError
---------------------------- Captured stderr setup -----------------------------
2023-06-17 11:02:39.217 | DEBUG    | funclg.character.equipment:__init__:54 - Created Equipment: Head
2023-06-17 11:02:39.217 | DEBUG    | funclg.character.equipment:__init__:54 - Created Equipment: Chest
2023-06-17 11:02:39.217 | DEBUG    | funclg.character.equipment:__init__:54 - Created Equipment: Back
2023-06-17 11:02:39.217 | DEBUG    | funclg.character.equipment:__init__:54 - Created Equipment: Pants
2023-06-17 11:02:39.218 | DEBUG    | funclg.character.equipment:__init__:54 - Created Equipment: Weapon: Knife
2023-06-17 11:02:39.218 | DEBUG    | funclg.character.equipment:__init__:54 - Created Equipment: Head
2023-06-17 11:02:39.218 | DEBUG    | funclg.character.equipment:__init__:54 - Created Equipment: Chest
2023-06-17 11:02:39.218 | DEBUG    | funclg.character.equipment:__init__:54 - Created Equipment: Back
2023-06-17 11:02:39.219 | DEBUG    | funclg.character.equipment:__init__:54 - Created Equipment: Pants
2023-06-17 11:02:39.219 | DEBUG    | funclg.character.equipment:__init__:54 - Created Equipment: Weapon: Knife
_______________________ test_armor_details_missing_item ________________________

light_armor_knife = <funclg.character.armor.Armor object at 0x7fe2e25345e0>
armor_details_missing_weapon = '\nLight Armor\n-----------\n  Head: \n  Head\n  ----\n  Type: [Light Head]\n  Description: Test Head\n\n  Modifier(s)...\n    Energy: +10.0%\n\n  Weapon: None\n\n  Stats\n  -----\n  Health: 210\n  Energy: 14.0\n  Attack: 10\n  Defense: 10'

    def test_armor_details_missing_item(light_armor_knife, armor_details_missing_weapon):
        light_armor_knife.dequip("weapon")
>       assert light_armor_knife.details() == armor_details_missing_weapon
E       AssertionError: assert '\nLight Armo...  Defense: 10' == '\nLight Armo...  Defense: 10'
E           
E           Light Armor
E           -----------
E             Head: 
E         -   Head
E         +     Head
E         ? ++...
E         
E         ...Full output truncated (100 lines hidden), use '-vv' to show

tests/test_character/test_armor.py:199: AssertionError
---------------------------- Captured stderr setup -----------------------------
2023-06-17 11:02:39.352 | DEBUG    | funclg.character.equipment:__init__:54 - Created Equipment: Head
2023-06-17 11:02:39.353 | DEBUG    | funclg.character.equipment:__init__:54 - Created Equipment: Chest
2023-06-17 11:02:39.354 | DEBUG    | funclg.character.equipment:__init__:54 - Created Equipment: Back
2023-06-17 11:02:39.354 | DEBUG    | funclg.character.equipment:__init__:54 - Created Equipment: Pants
2023-06-17 11:02:39.354 | DEBUG    | funclg.character.equipment:__init__:54 - Created Equipment: Weapon: Knife
2023-06-17 11:02:39.355 | DEBUG    | funclg.character.equipment:__init__:54 - Created Equipment: Head
2023-06-17 11:02:39.355 | DEBUG    | funclg.character.equipment:__init__:54 - Created Equipment: Chest
2023-06-17 11:02:39.356 | DEBUG    | funclg.character.equipment:__init__:54 - Created Equipment: Back
2023-06-17 11:02:39.356 | DEBUG    | funclg.character.equipment:__init__:54 - Created Equipment: Pants
2023-06-17 11:02:39.356 | DEBUG    | funclg.character.equipment:__init__:54 - Created Equipment: Weapon: Knife
----------------------------- Captured stderr call -----------------------------
2023-06-17 11:02:39.360 | INFO     | funclg.character.armor:dequip:145 - Dequipped Weapon: Knife from Weapon
____________________________ test_character_details ____________________________

basic_char = <funclg.character.character.Character object at 0x7fe2e27cfe80>
character_details_expectation = 'Test_Char\n---------\n\n  Class: Test_Role\n  ----------------\n  Armor Type: Light\n  Description: Test role\n  Role...Pants: None\n    Weapon: None\n\n    Stats\n    -----\n    Health: 10\n    Energy: 10\n    Attack: 10\n    Defense: 10'

    def test_character_details(basic_char, character_details_expectation):
>       assert basic_char.details() == character_details_expectation
E       AssertionError: assert 'Test_Char\n-...Defense: 10\n' == 'Test_Char\n-...  Defense: 10'
E         Skipping 317 identical leading characters in diff, use -v to show
E         - Defense: 10
E         + Defense: 10
E         ?            +

tests/test_character/test_character.py:123: AssertionError
---------------------------- Captured stderr setup -----------------------------
2023-06-17 11:02:39.664 | DEBUG    | funclg.character.roles:__init__:50 - Created Role: Test_Role

---------- coverage: platform linux, python 3.10.6-final-0 -----------
Name                                   Stmts   Miss Branch BrPart  Cover   Missing
----------------------------------------------------------------------------------
funclg/__init__.py                         0      0      0      0   100%
funclg/__main__.py                        35     19      4      1    44%   38-40, 53-64, 68-75, 79
funclg/character/__init__.py               0      0      0      0   100%
funclg/character/abilities.py             66      0     20      0   100%
>>>>>>> e3f377b (Planning modifications to character class)
funclg/character/armor.py                120      0     30      0   100%
funclg/character/character.py             57      0     12      0   100%
funclg/character/equipment.py             83      0     10      0   100%
funclg/character/modifiers.py             64      0     30      0   100%
funclg/character/roles.py                 73      0     26      0   100%
funclg/character/stats.py                 62      0     28      0   100%
funclg/managers/__init__.py               15      2      4      0    79%   29-30
<<<<<<< HEAD
funclg/managers/abilities_manager.py      66      0     22      0   100%
funclg/managers/character_manager.py     113     88     50      1    16%   28-34, 38-50, 56-65, 69-72, 82-105, 112-164, 173-176, 180-185, 189-200
funclg/managers/equipment_manager.py      89      0     30      0   100%
funclg/managers/modifier_manager.py       65      0     26      0   100%
<<<<<<< HEAD
funclg/managers/roles_manager.py         116     88     44      1    21%   28->27, 38-41, 46-68, 75-125, 131-156, 166-169, 173-179, 183-194
=======
funclg/managers/roles_manager.py         121      0     50      1    99%   112->126
>>>>>>> b004044 (completed character manager)
=======
funclg/managers/abilities_manager.py      66      0     22      1    99%   27->26
funclg/managers/character_manager.py     115     53     50      3    49%   59->58, 62->65, 65->68, 85-108, 115-167, 187-198
funclg/managers/equipment_manager.py      89      1     30      2    97%   29->27, 90
funclg/managers/modifier_manager.py       66      0     26      0   100%
funclg/managers/roles_manager.py         121      0     50      2    99%   29->28, 112->126
>>>>>>> e3f377b (Planning modifications to character class)
funclg/utils/__init__.py                   0      0      0      0   100%
funclg/utils/data_mgmt.py                 48     13     16      1    69%   41->55, 45-54, 65-68
funclg/utils/input_validation.py          43     30     16      0    29%   15-25, 32-33, 40, 48-50, 65-71, 76-86
funclg/utils/menu_funcs.py                36     16     14      0    48%   29-52
funclg/utils/types.py                     17      0      6      1    96%   60->63
----------------------------------------------------------------------------------
<<<<<<< HEAD
<<<<<<< HEAD
TOTAL                                   1070    171    324      4    83%

FAIL Required test coverage of 100.0% not reached. Total coverage: 82.71%

======================= 101 passed, 2 warnings in 1.60s ========================
=======
TOTAL                                   1168    165    382      5    84%

FAIL Required test coverage of 95.0% not reached. Total coverage: 84.00%

======================= 110 passed, 2 warnings in 1.55s ========================
>>>>>>> b004044 (completed character manager)
=======
TOTAL                                   1176    134    394     11    87%

FAIL Required test coverage of 95.0% not reached. Total coverage: 86.94%
================== 4 failed, 110 passed, 2 warnings in 19.16s ==================
>>>>>>> e3f377b (Planning modifications to character class)

---Code Quality Report---


<<<<<<< HEAD
=======
-----ISORT-----


-----BLACK-----

reformatted funclg/character/character.py

All done! ✨ 🍰 ✨
1 file reformatted, 20 files left unchanged.

>>>>>>> 83c69e3 (db file io fixe and module clean up)
-----BANDIT-----


-----PYLINT-----

<<<<<<< HEAD
=======
************* Module funclg.__main__
funclg/__main__.py:46:34: W0511: TODO: add play instance (fixme)
************* Module funclg.character.abilities
funclg/character/abilities.py:21:1: W0511: TODO: add energy cost attribute (fixme)
************* Module funclg.character.character
funclg/character/character.py:33:1: W0511: TODO: Char Update - 1: Update character so that it is generalized (fixme)
funclg/character/character.py:34:1: W0511: TODO: Char Update - 2: Create a class called playable character for the user (fixme)
funclg/character/character.py:35:1: W0511: TODO: Char Update - 3: Create the NPC class that can be used later for random generation (fixme)
funclg/character/character.py:43:5: W0511: TODO: Update initialization process so that the role decides the armor type for the character and then all armor and equips will validate for the role (fixme)
************* Module funclg.character.equipment
funclg/character/equipment.py:23:1: W0511: TODO: Change equipment display methods (fixme)
funclg/character/equipment.py:151:5: W0511: TODO: Change equipment display methods (fixme)
funclg/character/equipment.py:176:5: W0511: TODO: Override details to include the weapon type (fixme)
funclg/character/equipment.py:215:5: W0511: TODO: Change equipment display methods (fixme)
************* Module funclg.character.modifiers
funclg/character/modifiers.py:66:9: W0511: TODO: Add check for percentage and add, and compare against the MOD_ADD_RANGE and MOD_MULT_RANGE (fixme)
************* Module funclg.character.roles
<<<<<<< HEAD
funclg/character/roles.py:124:5: W0511: def show_powers(): #TODO Define me (fixme)
funclg/character/roles.py:125:5: W0511: def copy(): # TODO: Roles copy method: unsure if needed (fixme)
>>>>>>> b993bb6 (Completed abilities manager and related necessary changes)
=======
funclg/character/roles.py:136:5: W0511: def show_powers(): #TODO Define me (fixme)
>>>>>>> d9d7959 (completed roles manager build role)
************* Module funclg.character.stats
<<<<<<< HEAD
funclg/character/stats.py:147:5: W0511: TODO: 2023.10.18 - Needs to return a new Stats object and should be loaded as a Stats item in equipment similar to other Characer module copies. (fixme)

------------------------------------------------------------------
Your code has been rated at 9.99/10 (previous run: 9.99/10, +0.00)

+==============================================================================+

                               /$$$$$$            /$$
                              /$$__  $$          | $$
           /$$$$$$$  /$$$$$$ | $$  \__//$$$$$$  /$$$$$$   /$$   /$$
          /$$_____/ |____  $$| $$$$   /$$__  $$|_  $$_/  | $$  | $$
         |  $$$$$$   /$$$$$$$| $$_/  | $$$$$$$$  | $$    | $$  | $$
          \____  $$ /$$__  $$| $$    | $$_____/  | $$ /$$| $$  | $$
          /$$$$$$$/|  $$$$$$$| $$    |  $$$$$$$  |  $$$$/|  $$$$$$$
         |_______/  \_______/|__/     \_______/   \___/   \____  $$
                                                          /$$  | $$
                                                         |  $$$$$$/
  by pyup.io                                              \______/

+==============================================================================+

 [1mREPORT[0m 

[31m[22m  Safety is using PyUp's free open-source vulnerability database. This
data is 30 days old and limited. [0m
[31m  For real-time enhanced vulnerability data, fix recommendations, severity
reporting, cybersecurity support, team and project policy management and more
sign up at https://pyup.io or email sales@pyup.io[0m

  Safety [1mv2.3.5[0m is scanning for [1mVulnerabilities[0m[1m...[0m
[1m  Scanning dependencies[0m in your [1menvironment:[0m

  -> /home/jevinle/.cache/pypoetry/virtualenvs/funclg-
    AThUaF5z-py3.10/lib/python3.10/site-packages

  Using [1mnon-commercial database[0m
[1m  Found and scanned 69 packages[0m
  Timestamp [1m2023-11-26 14:44:20[0m
[1m  2[0m[1m vulnerabilities found[0m
[1m  0[0m[1m vulnerabilities ignored[0m

+==============================================================================+
 [31m[1mVULNERABILITIES FOUND[0m 
+==============================================================================+

[31m-> Vulnerability found in pip version 23.2.1
[0m[1m   Vulnerability ID: [0m62044
[1m   Affected spec: [0m<23.3
[1m   ADVISORY: [0mPip 23.3 includes a fix for CVE-2023-5752: When installing
   a package from a Mercurial VCS URL (ie "pip install hg+...") with pip...
[1m   CVE-2023-5752[0m
[1m   For more information, please visit
   [0mhttps://data.safetycli.com/v/62044/f17[0m
=======
funclg/character/stats.py:114:1: W0511: TODO: Create a role stat class (fixme)
funclg/character/stats.py:122:1: W0511: TODO: Build Character stats (fixme)
funclg/character/stats.py:115:0: W0105: String statement has no effect (pointless-string-statement)
funclg/character/stats.py:123:0: W0105: String statement has no effect (pointless-string-statement)
************* Module funclg.managers.abilities_manager
funclg/managers/abilities_manager.py:38:1: W0511: TODO: need to add a condition to not return so that there is not lose data (fixme)
funclg/managers/abilities_manager.py:39:1: W0511: TODO: Need to update so that if a new role is created and the user wants to create a new ability the selected ability types can be passed in only used (fixme)
funclg/managers/abilities_manager.py:43:5: W0511: TODO: Add description print out (fixme)
funclg/managers/abilities_manager.py:53:5: W0511: TODO: Need to be able to chose the mod for the ability they want (fixme)
************* Module funclg.managers.equipment_manager
funclg/managers/equipment_manager.py:24:5: W0511: TODO: On edit, needs to update all values (fixme)
************* Module funclg.managers.modifier_manager
funclg/managers/modifier_manager.py:49:1: W0511: TODO: Create/modify the build to allow for random creation (fixme)
funclg/managers/modifier_manager.py:51:1: W0511: TODO Convert method to be able to handle multiple types of modifier generations. May require creating sub methods for the different types, weapon, armor, and abilities (fixme)
funclg/managers/modifier_manager.py:80:1: W0511: TODO: Change function to be allow the user to define each attribute of the MOD type, for each type decide if wanted or not, if so which type (percetage or base) (positive or nega), return values. (fixme)
funclg/managers/modifier_manager.py:81:0: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
************* Module funclg.managers.roles_manager
<<<<<<< HEAD
funclg/managers/roles_manager.py:24:5: W0511: TODO: On edit, needs to update all values (fixme)
funclg/managers/roles_manager.py:53:9: W0511: TODO: Add description print out (fixme)
funclg/managers/roles_manager.py:71:1: W0511: TODO add an option for adding no roles (fixme)
funclg/managers/roles_manager.py:124:5: W0511: TODO: Future: consider option to create a new one (fixme)
=======
funclg/managers/roles_manager.py:26:5: W0511: TODO: On edit, needs to update all values (fixme)
funclg/managers/roles_manager.py:56:9: W0511: TODO: Add description print out (fixme)
funclg/managers/roles_manager.py:72:1: W0511: TODO add an option for adding no roles (fixme)
funclg/managers/roles_manager.py:125:5: W0511: TODO: Future: consider option to create a new one (fixme)
>>>>>>> b004044 (completed character manager)
************* Module funclg.utils.data_mgmt
funclg/utils/data_mgmt.py:37:1: W0511: TODO may need to move assertion error to validate method (fixme)
funclg/utils/data_mgmt.py:50:9: W0511: TODO may want to re-validate name before creating (fixme)
************* Module funclg.utils.input_validation
funclg/utils/input_validation.py:47:5: W0511: TODO: Decide if the capitalize needs to stay here or not (fixme)
************* Module funclg.utils.types
funclg/utils/types.py:7:1: W0511: TODO: Consider changing IT, AT and WT to enums (fixme)
funclg/utils/types.py:18:1: W0511: TODO Add descriptions (fixme)
funclg/utils/types.py:38:9: W0511: TODO: Change to 'Basic' types or something that is not none (fixme)

<<<<<<< HEAD
------------------------------------------------------------------
<<<<<<< HEAD
Your code has been rated at 9.70/10 (previous run: 9.70/10, +0.00)
=======
Your code has been rated at 9.74/10 (previous run: 9.74/10, +0.00)
>>>>>>> b004044 (completed character manager)
=======
-----------------------------------
Your code has been rated at 9.70/10
>>>>>>> e3f377b (Planning modifications to character class)


-----PYRIGHT-----

npx: installed 1 in 4.094s
No configuration file found.
pyproject.toml file found at /mnt/c/Users/jevin/OneDrive/Documents/CODING/Dev/FUNCLG.
Loading pyproject.toml file at /mnt/c/Users/jevin/OneDrive/Documents/CODING/Dev/FUNCLG/pyproject.toml
Pyproject file "/mnt/c/Users/jevin/OneDrive/Documents/CODING/Dev/FUNCLG/pyproject.toml" is missing "[tool.pyright]" section.
stubPath /mnt/c/Users/jevin/OneDrive/Documents/CODING/Dev/FUNCLG/typings is not a valid directory.
Assuming Python platform Linux
Searching for source files
Found 21 source files
0 errors, 0 warnings, 0 informations 
Completed in 1.74sec
